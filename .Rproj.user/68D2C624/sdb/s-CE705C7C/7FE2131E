{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Computing returns and sample stats\"\nauthor: \"Kirsten Zimbardi\"\ndate: \"15 July 2016\"\noutput: html_document\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n\n# clean workspace\nrm(list=ls())\n\n# packages\nrequire(lubridate)\nrequire(MASS)\n\n# functions\nsource(\"HelperFunctionsPorfolioMgmt.R\")\n\n```\n\nload data \n```{r}\n# multiple files\n#fileNames <- Sys.glob(\"*.csv\")\n#col.names = c(\"Date\", \"Amount\", \"Description\", \"Balance\")\n#data.ls = NULL\n#for (i in 1:length(fileNames)) {\n#  data.ls[[i]] <- read.csv(fileNames[i], header = F, stringsAsFactors = F)\n#  names(data.ls[[i]]) = col.names\n#  data.ls[[i]]$Date = as.POSIXlt(data.ls[[i]]$Date, format = \"%d/%m/%Y\")\n#}\n\n# single file\ndata <- read.csv(\"Data.csv\", header = T, stringsAsFactors = F)\n\ncols.price = c(2,3)\nfor (i in cols.price) {\n  names(data)[i] = paste0(names(data)[i], \".Price\")\n}\n\ndata$Date = as.POSIXlt(data$Date, format = \"%d/%m/%Y\")\n\n\n```\n\n\ncomputing returns  \n```{r}\ndf = data\nfor (j in cols.price) {\n  for (i in 2:nrow(df)) {\n    df[i,(j+2)] = df[i,j]/df[(i-1),j] - 1\n  }\n  names(df)[(j+2)] = gsub(\".Price\", \".Returns\", names(df)[(j)])\n}\n\ndata = df\n```\n\n\ncomputing average returns, variance and covariance  \n```{r}\ndf = data\ncols.return = c(4:5)\n\nm = NULL\nv = NULL\nfor(j in 1:length(cols.return)) {\n  m[j] = mean(df[,cols.return[j]], na.rm=T)\n  v[j] = var(df[,cols.return[j]], na.rm=T)\n}\n\ncv = cov(df[2:nrow(df),cols.return[1]], df[2:nrow(df), cols.return[2]])\n\n\ndf.stats = Stats(df, cols.return)\ndf.stats\n\ndf$period = as.factor(ifelse(df$Date>\"2003-12-31\", \"2004-2015\", \"1992-2003\"))\n\nstats.spx.index = Stats.grouped(df, 4, 6)\nstats.spx.index *100\nstats.us.index = Stats.grouped(df, 5, 6)\nstats.us.index *100\n\n```\n\npreference metric - sample  \n?calculates preference-equivalent returns  \n```{r}\n\n\npref.sample.percent(exp.return=2, variability=20, v.type=\"vol\")\npref.sample.percent(2, 20, v.type=\"vol\")\n\npref.sample(exp.return=df.stats[1,1], variability=df.stats[1,2], risk.aversion=10, v.type=\"var\")\npref.sample(exp.return=df.stats[2,1], variability=df.stats[2,2], risk.aversion=10, v.type=\"var\")\n\n```\n\npreference metric - probability  \n```{r}\nE.vec = c(1, 2, 3)/100\np.vec = c(1, 2, 3)/100\nsum(E.vec * p.vec)\n\n```\n\nexpected return - sample  \n```{r}\n#r = c(0.15, 0.13, -0.2, 0.12, 0.02)\nReturn = c(15, 13, -20, 12, 2)/100\n\nEr = 1/length(Return) * sum(Return)\nEr\n```\n\ntotal return  \n```{r}\n\nPrice.initial = 1000\nPrice.later = 1000\ncap.gain = 0\ndividends = 50\n(Price.initial - Price.later + cap.gain + dividends) / Price.later\n\n```\n\n\ntotal return with inflation rate  \n```{r}\nPrice.initial = 100\nInflation.initial = 1\nPrice.later = 90\nInflation.later = 1 - (5/100)\ndividends.later = 0\n\n(((Price.later + dividends.later)/Inflation.later) - (Price.initial/Inflation.initial)) / (Price.initial/Inflation.initial)\n```\n\n\nexpanding average returns, variance and covariance  \n```{r}\nstart = which(df$Date == \"1996-01-31\")\na = rep(0,(nrow(df) - start + 1))\nexp.ave = as.data.frame(cbind(a, a))\nexp.var = as.data.frame(cbind(a, a))\nexp.cov = as.data.frame(a)\nfor(j in 4:5) { \n  for(i in start:nrow(df)) {\n    exp.ave[(i-start+1),(j-3)] = mean(df[2:i,j])\n    exp.var[(i-start+1),(j-3)] = var(df[2:i,j])\n  }\n}\n\n# visualising trends over time\ndates = df[50:nrow(df),1]\nequity = df2[,4]\nbonds = df2[,5]\n\nquartz()\nplot(dates, equity, type=\"n\")\nlines(dates, equity, col=\"red\", lwd=2)\nlines(dates, bonds, col=\"blue\", lwd=2)\n\n\nequity = exp.ave[,1]\nbonds = exp.ave[,2]\n\nquartz()\nplot(dates, equity, type=\"n\")\nlines(dates, equity, col=\"red\", lwd=2)\nlines(dates, bonds, col=\"blue\", lwd=2)\n\n\nequity = exp.var[,1]\nbonds = exp.var[,2]*10\nquartz()\nplot(dates, equity, type=\"n\")\n#lines(dates, equity, col=\"red\", lwd=2)\nlines(dates, bonds, col=\"blue\", lwd=2)\n\nplot(dates, bonds)\n\nexp.cov = NULL\nfor(i in start:nrow(df)) {\n    exp.cov[(i-start+1)] = cov(df[2:i,4], df[2:i,5])\n}\n\nplot(dates, exp.cov)\n\n  \n```\n\n\n# Week 2  \n## Optimising portfolio construction  \nMaximising Er by altering w  \n```{r}\n# expected return - portfolio\nEr.p = Rrisk.free + t(w)\n\n\n```\n\n\n",
    "created" : 1468745771242.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3355976626",
    "id" : "7FE2131E",
    "lastKnownWriteTime" : 1468880337,
    "last_content_update" : 1468880337,
    "path" : "~/Dropbox/Upskilling/CourseraInvestmentMgmt/Computing returns and sample stats.Rmd",
    "project_path" : "Computing returns and sample stats.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}